{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","currentGood","nextGood","ALPHABET","localeCompare","LENGTH","length","reverse","App","useState","setReverse","NONE","setSortType","visibilityResetButton","className","type","onClick","classNames","map","good","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,kFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASK,SAASC,EACdC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAmBzB,OAjBAG,EAAaC,MAAK,SAACC,EAAqBC,GACtC,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAYG,cAAcF,GAEnC,KAAKT,EAASY,OACZ,OAAOJ,EAAYK,OAASJ,EAASI,OAEvC,QACE,OAAO,MAITR,GACFC,EAAaQ,UAGRR,G,SA9BJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAMe,EAAoB,WAC/B,MAAiCC,oBAAS,GAA1C,mBAAOX,EAAP,KAAmBY,EAAnB,KACA,EAAgCD,mBAAmBhB,EAASkB,MAA5D,mBAAOd,EAAP,KAAiBe,EAAjB,KACMC,EAAwBhB,IAAaJ,EAASkB,MAAQb,EAmB5D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAtBe,WACrBJ,EAAYnB,EAASU,WAsBfW,UAAWG,IACT,SACA,UACA,CAAE,WAAYpB,IAAaJ,EAASU,WANxC,iCAYA,wBACEY,KAAK,SACLC,QA9Ba,WACnBJ,EAAYnB,EAASY,SA8BfS,UAAWG,IACT,SACA,aACA,CAAE,WAAYpB,IAAaJ,EAASY,SANxC,4BAYA,wBACEU,KAAK,SACLC,QAAS,WArCfN,GAAYZ,IAwCNgB,UAAWG,IACT,SACA,aACA,CAAE,YAAanB,IARnB,qBAcCe,GACC,wBACEE,KAAK,SACLC,QAjDQ,WAChBJ,EAAYnB,EAASkB,MACrBD,GAAW,IAgDHI,UAAU,4BAHZ,sBAUJ,6BACE,6BACGnB,EACCD,EACAG,EACAC,GACAoB,KAAI,SAAAC,GAAI,OACR,oBAAmB,UAAQ,OAA3B,SAAmCA,GAA1BC,0BClIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc36a1b8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: number,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((currentGood: string, nextGood: string) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return currentGood.localeCompare(nextGood);\n\n      case SortType.LENGTH:\n        return currentGood.length - nextGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<{}> = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState<SortType>(SortType.NONE);\n  const visibilityResetButton = sortType !== SortType.NONE || isReversed;\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseList = () => {\n    setReverse(!isReversed);\n  };\n\n  const resetList = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortByAlphabet}\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n          className={classNames(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            reverseList();\n          }}\n          className={classNames(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {visibilityResetButton && (\n          <button\n            type=\"button\"\n            onClick={resetList}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(\n            goodsFromServer,\n            sortType,\n            isReversed,\n          ).map(good => (\n            <li key={uuidv4()} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}